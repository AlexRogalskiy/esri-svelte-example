import{m as t,G as e,ab as i,ac as a,ad as r}from"./vendor.d0a39f0f.js";import{t as s}from"./BitmapContainer.98f407c0.js";import{l as o,u as n}from"./LayerView.556d10e0.js";import{S as p}from"./ExportStrategy.da9ec209.js";import{a as m}from"./RefreshableLayerView.6e21e268.js";import"./WGLContainer.e726cb8a.js";import"./definitions.e5e12ce7.js";import"./VertexArrayObject.3a9852d6.js";import"./Texture.6f578e52.js";import"./Utils.ea926aef.js";import"./ShaderCompiler.f5adc423.js";import"./config.92a85a9b.js";import"./GeometryUtils.1bcb906c.js";import"./MaterialKey.376930c0.js";import"./pixelUtils.df2312f8.js";import"./Container.90659a9c.js";import"./earcut.9760c2d2.js";import"./Bitmap.97c680ca.js";const d=t.getLogger("esri.views.2d.layers.BaseDynamicLayerView2D");let h=class extends(m(o(n))){hitTest(){return null}update(t){this.strategy.update(t).catch((t=>{e(t)||d.error(t)})),this.notifyChange("updating")}attach(){this._bitmapContainer=new s,this.container.addChild(this._bitmapContainer),this.strategy=new p({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this.strategy.destroy(),this.strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(t,e,i){return this.layer.fetchImage(t,e,i)}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}};i([a()],h.prototype,"strategy",void 0),i([a()],h.prototype,"updating",void 0),h=i([r("esri.views.2d.layers.BaseDynamicLayerView2D")],h);var c=h;export{c as default};
