import{ca as f,cb as p,bT as d,cd as u,gO as g,c8 as D,w as h,cc as O,ce as w,cf as $,gP as x,gQ as N,gR as S,c9 as E}from"./vendor.f5642644.js";import{c as R,a as j}from"./devEnvironmentUtils.444b8fd1.js";function Q(e,t,a,n){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?B(e,t,n):D(e,t,n).then(o=>T(o,e.name,t,a,n)):Promise.reject(new h("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function T(e,t,a,n,o){const c=e.data,b={portal:a&&a.portal||O.getDefault(),url:u(e.baseUrl),origin:"portal-item"},s=c.items.find(r=>r.name===t);if(!s){const r=`The symbol name '${t}' could not be found`;return Promise.reject(new h("symbolstyleutils:symbol-name-not-found",r,{symbolName:t}))}let m=w($(s,n),b),i=s.thumbnail&&s.thumbnail.href;const y=s.thumbnail&&s.thumbnail.imageData;R()&&(m=j(m),i=j(i));const U={portal:a.portal,url:u(g(m)),origin:"portal-item"};return f(m,o).then(r=>{const P=n==="cimRef"?p(r.data):r.data,l=d(P,U);if(l&&x(l)){if(i){const v=w(i,b);l.thumbnail=new N({url:v})}else y&&(l.thumbnail=new N({url:`data:image/png;base64,${y}`}));e.styleUrl?l.styleOrigin=new S({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(l.styleOrigin=new S({portal:a.portal,styleName:e.styleName,name:t}))}return l})}function B(e,t,a){const n=E.replace(/\{SymbolName\}/gi,e.name);return f(n,a).then(o=>{const c=p(o.data);return d(c,{portal:t.portal,url:u(g(n)),origin:"portal-item"})})}export{T as fetchSymbolFromStyle,Q as resolveWebStyleSymbol};
