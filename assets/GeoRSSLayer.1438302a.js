var e=Object.defineProperty,t=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,i=(t,o,r)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[o]=r;import{gE as s,gG as l,cU as a,cV as n,gF as p,cW as y,c$ as c,dq as u,r as d,cz as h,L as S,G as v,ab as f,ac as b,cE as m,gY as g,h6 as C,c_ as O,ad as R,h7 as j,h8 as w,h9 as F,ha as x,hb as E}from"./vendor.5b1a85aa.js";const G=["atom","xml"],P={base:j,key:"type",typeMap:{"simple-line":w},errorContext:"symbol"},k={base:j,key:"type",typeMap:{"picture-marker":F,"simple-marker":x},errorContext:"symbol"},L={base:j,key:"type",typeMap:{"simple-fill":E},errorContext:"symbol"};let M=class extends(s(l(a(n(p(y(c))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,s){return"string"==typeof e?((e,s)=>{for(var l in s||(s={}))o.call(s,l)&&i(e,l,s[l]);if(t)for(var l of t(s))r.call(s,l)&&i(e,l,s[l]);return e})({url:e},s):e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?u(this.url,G)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=d(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(h).then((()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await S(v.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};f([b()],M.prototype,"description",void 0),f([b({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],M.prototype,"title",null),f([b()],M.prototype,"featureCollections",void 0),f([m("service","featureCollections",["featureCollection.layers"])],M.prototype,"readFeatureCollections",null),f([b(g)],M.prototype,"id",void 0),f([b(C)],M.prototype,"legendEnabled",void 0),f([b({types:P,json:{write:!0}})],M.prototype,"lineSymbol",void 0),f([b({type:["show","hide"]})],M.prototype,"listMode",void 0),f([b({types:k,json:{write:!0}})],M.prototype,"pointSymbol",void 0),f([b({types:L,json:{write:!0}})],M.prototype,"polygonSymbol",void 0),f([b({type:["GeoRSS"]})],M.prototype,"operationalLayerType",void 0),f([b()],M.prototype,"outSpatialReference",void 0),f([b(O)],M.prototype,"url",void 0),f([b({readOnly:!0,json:{read:!1},value:"geo-rss"})],M.prototype,"type",void 0),M=f([R("esri.layers.GeoRSSLayer")],M);var _=M;export{_ as default};
