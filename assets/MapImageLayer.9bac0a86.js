var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,o=(t,r,s)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s,l=(e,t)=>{for(var r in t||(t={}))a.call(t,r)&&o(e,r,t[r]);if(s)for(var r of s(t))i.call(t,r)&&o(e,r,t[r]);return e},n=(e,s)=>t(e,r(s));import{gE as p,hh as c,gF as y,gG as u,cT as h,cU as d,cV as m,cW as g,gT as b,hi as f,a8 as v,c$ as x,r as S,cz as w,hz as O,q as j,L as E,D as I,c8 as P,dF as M,gV as F,ab as N,ac as J,cE as L,bT as R,gb as T,c_ as U,ad as q}from"./vendor.5b1a85aa.js";import{r as V}from"./scaleUtils.58fb1cfa.js";import{f as A,y as D,Q as $}from"./SublayersOwner.609325de.js";import{n as k}from"./ExportImageParameters.e5e83f96.js";import{e as z}from"./sublayerUtils.70a0c1f5.js";import"./Version.ed1f8395.js";let G=class extends(p(c(y(u(A(D(h(d(m(g(b(f(v(x)))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?l({url:e},t):e}load(e){const t=S(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(w).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let i=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=O(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;i=z(a,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");i=z(a,e.sublayers,O(e.origin))}}const o=[],n=l({writeSublayerStructure:i},s);let p=i;a.forEach((e=>{const t=e.write({},n);o.push(t),p=p||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),p&&(t.visibleLayers=a.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const a=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const i=new k({layer:this,scale:V({extent:e,width:t})*a}),o=i.toJSON();i.destroy();const n=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},p=e&&e.spatialReference,c=p.wkid||JSON.stringify(p.toJSON());o.dpi*=a;const y={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();y.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(y.time="null,null");return l(l(l({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:c,imageSR:c,size:t+","+r},o),n),y)}async fetchImage(e,t,r,s){var a,i;const o={responseType:"image",signal:null!=(a=null==s?void 0:s.signal)?a:null,query:n(l(n(l(l({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,s)),{f:"image",_ts:this.alwaysRefetch?Date.now():null!=(i=null==s?void 0:s.timestamp)?i:null}),this.customParameters),{token:this.apiKey})},p=this.parsedUrl.path+"/export";return null==o.query.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?E(p,o).then((e=>e.data)).catch((e=>{if(I(e))throw e;throw new j("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:e})})):Promise.reject(new j("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o.query}))}async fetchRecomputedExtents(e={}){const t=n(l({},e),{query:{returnUpdates:!0,f:"json"}}),{data:r}=await E(this.url,t),{extent:s,fullExtent:a,timeExtent:i}=r,o=s||a;return{fullExtent:o&&P.fromJSON(o),timeExtent:i&&M.fromJSON({start:i[0],end:i[1]})}}loadAll(){return F(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await E(this.parsedUrl.path,{query:n(l(l({f:"json"},this.parsedUrl.query),this.customParameters),{token:this.apiKey}),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};N([J()],G.prototype,"alwaysRefetch",void 0),N([J()],G.prototype,"dpi",void 0),N([J()],G.prototype,"gdbVersion",void 0),N([J()],G.prototype,"imageFormat",void 0),N([L("imageFormat",["supportedImageFormatTypes"])],G.prototype,"readImageFormat",null),N([J({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],G.prototype,"imageMaxHeight",void 0),N([J({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],G.prototype,"imageMaxWidth",void 0),N([J()],G.prototype,"imageTransparency",void 0),N([J({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],G.prototype,"isReference",void 0),N([J({json:{read:!1,write:!1}})],G.prototype,"labelsVisible",void 0),N([J({type:["ArcGISMapServiceLayer"]})],G.prototype,"operationalLayerType",void 0),N([J({json:{read:!1,write:!1}})],G.prototype,"popupEnabled",void 0),N([J()],G.prototype,"sourceJSON",void 0),N([J({json:{write:{ignoreOrigin:!0}}})],G.prototype,"sublayers",void 0),N([R("sublayers",{layers:{type:[$]},visibleLayers:{type:[T]}})],G.prototype,"writeSublayers",null),N([J({type:["show","hide","hide-children"]})],G.prototype,"listMode",void 0),N([J({json:{read:!1},readOnly:!0,value:"map-image"})],G.prototype,"type",void 0),N([J(U)],G.prototype,"url",void 0),G=N([q("esri.layers.MapImageLayer")],G);var W=G;export{W as default};
