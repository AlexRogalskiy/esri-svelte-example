var R=Object.defineProperty;var k=Object.getOwnPropertySymbols;var W=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var M=(i,t,e)=>t in i?R(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e,m=(i,t)=>{for(var e in t||(t={}))W.call(t,e)&&M(i,e,t[e]);if(k)for(var e of k(t))F.call(t,e)&&M(i,e,t[e]);return i};import{aB as z,ds as _,cA as G,cP as K,E as H,cL as D,bG as J,cD as N,r as V,w as j,dx as B,cE as L,b8 as U,dH as Q,dI as $,dJ as O,dK as Y,af as h,ag as d,ah as X}from"./vendor.85f7dae5.js";import{b,g as Z,d as ii}from"./kmlUtils.da33ce06.js";import{v as ti}from"./Bitmap.b76451b3.js";import{t as ei}from"./BitmapContainer.97a33c73.js";import{f as si,u as ai}from"./LayerView.96933026.js";import{i as v}from"./GraphicContainer.14e23810.js";import{r as f}from"./BaseGraphicContainer.b5f81ed2.js";import"./Container.710b0eab.js";import"./enums.457e23f9.js";import"./Texture.0a5e9578.js";import"./WGLContainer.58232395.js";import"./pixelUtils.81a2c47a.js";import"./VertexArrayObject.37b5010e.js";import"./VertexElementDescriptor.0406f2d4.js";import"./enums.d6db9796.js";import"./Utils.c81af201.js";import"./ProgramTemplate.222695da.js";import"./StyleDefinition.3146490e.js";import"./config.bd364997.js";import"./GeometryUtils.5ea26345.js";import"./MaterialKey.d6d4c400.js";import"./earcut.91e104de.js";import"./CIMSymbolHelper.1288b346.js";import"./BidiEngine.b9926823.js";import"./GeometryUtils.e53da643.js";import"./projectionSupport.d4bcbcd3.js";import"./json.da51edc4.js";import"./FeatureContainer.e9c6d16b.js";import"./TileContainer.3466b105.js";import"./visualVariablesUtils.6c4193ad.js";import"./visualVariablesUtils.36e1778e.js";import"./Matcher.4fc35cf2.js";import"./tileUtils.847f5850.js";import"./TileClipper.9eab18a5.js";import"./Geometry.e891c191.js";import"./ExpandedCIM.5149f774.js";import"./quantizationUtils.bb304765.js";import"./devEnvironmentUtils.f51567b1.js";import"./schemaUtils.a6cfb8c2.js";import"./createSymbolSchema.86478aa4.js";import"./MD5.67d7a872.js";import"./util.94a60279.js";import"./ComputedAttributeStorage.fdd6354d.js";import"./vec3f32.8179e08f.js";class A{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let r=class extends si(ai){constructor(){super(...arguments),this._handles=new z,this._bitmapIndex=new Map,this._mapImageContainer=new ei,this._kmlVisualData=new A,this.allVisiblePoints=new _,this.allVisiblePolylines=new _,this.allVisiblePolygons=new _,this.allVisibleMapImages=new G}async hitTest(i,t){var e,l,s;return(await Promise.all([(e=this._pointsView)==null?void 0:e.hitTest(i),(l=this._polylinesView)==null?void 0:l.hitTest(i),(s=this._polygonsView)==null?void 0:s.hitTest(i)])).flat().filter(a=>!!a&&(a.layer=this.layer,a.sourceLayer=this.layer,!0))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new f({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new f({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new f({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.handles.add([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),K(()=>this.layer.visibleSublayers,i=>{for(const[t,e]of this._kmlVisualData.allSublayers)e.visibility=0;for(const t of i){const e=this._kmlVisualData.allSublayers.get(t.id);e&&(e.visibility=1)}this._refreshCollections()})]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal))}detach(){this._fetchController.abort(),this._fetchController=null,this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&H(i.href,{responseType:"image"}).then(({data:t})=>{let e=D.fromJSON(i.extent);J(e,this.view.spatialReference)&&(e=N(e,this.view.spatialReference));const l=new ti(t,"standard");l.x=e.xmin,l.y=e.ymax,l.resolution=e.width/t.naturalWidth,l.rotation=i.rotation,this._mapImageContainer.addChild(l),this._bitmapIndex.set(i,l)})}async _getViewDependentUrl(i,t){const{viewFormat:e,viewBoundScale:l,httpQuery:s}=i;if(V(e)){if(j(t))throw new Error("Loading this network link requires a view state.");let a;if(await B(),V(l)&&l!==1){const n=new D(t.extent);n.expand(l),a=n}else a=t.extent;a=L(a,U.WGS84);const p=L(a,U.WebMercator),c=a.xmin,y=a.xmax,o=a.ymin,T=a.ymax,q=t.size[0]*t.pixelRatio,E=t.size[1]*t.pixelRatio,S=Math.max(p.width,p.height),I={"[bboxWest]":c.toString(),"[bboxEast]":y.toString(),"[bboxSouth]":o.toString(),"[bboxNorth]":T.toString(),"[lookatLon]":a.center.x.toString(),"[lookatLat]":a.center.y.toString(),"[lookatRange]":S.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":a.center.x.toString(),"[lookatTerrainLat]":a.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":a.center.x.toString(),"[cameraLat]":a.center.y.toString(),"[cameraAlt]":S.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":q.toString(),"[vertPixels]":E.toString(),"[terrainEnabled]":"0","[clientVersion]":Q,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},x=n=>{for(const C in n)for(const P in I)n[C]=n[C].replace(P,I[P])},w=$(e);x(w);let g={};V(s)&&(g=$(s),x(g));const u=O(i.href);return u.query=m(m(m({},u.query),w),g),`${u.path}?${Y(w)}`}return i.href}async _fetchService(i){const t=new A;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!t.visibility&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,e){return this._fetchParsedKML(i,e).then(async l=>{for(const s of l.sublayers){t.allSublayers.set(s.id,s);const a=s.points?await b(s.points):[],p=s.polylines?await b(s.polylines):[],c=s.polygons?await b(s.polygons):[],y=s.mapImages||[];if(t.allPoints.push(...a.map(o=>({item:o,sublayerId:s.id}))),t.allPolylines.push(...p.map(o=>({item:o,sublayerId:s.id}))),t.allPolygons.push(...c.map(o=>({item:o,sublayerId:s.id}))),t.allMapImages.push(...y.map(o=>({item:o,sublayerId:s.id}))),s.networkLink){const o=await this._getViewDependentUrl(s.networkLink,this.view.state);await this._loadVisualData(o,t,e)}}})}_fetchParsedKML(i,t){return Z(i,this.view.spatialReference,this.layer.refreshInterval,t).then(e=>ii(e.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};h([d()],r.prototype,"_pointsView",void 0),h([d()],r.prototype,"_polylinesView",void 0),h([d()],r.prototype,"_polygonsView",void 0),h([d()],r.prototype,"updating",void 0),r=h([X("esri.views.2d.layers.KMLLayerView2D")],r);const Oi=r;export{Oi as default};
