import{ff as g,dG as m,fg as p,fh as y,fi as w,bu as f}from"./vendor.f5642644.js";class b{constructor(){this.code=null,this.description=null}}class I{constructor(t){this.error=new b,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function d(e){return new I(e)}class v{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function S(e){return new v(e)}const u=new Set;function E(e,t,i,h=!1,a){u.clear();for(const r in i){const n=e.get(r);if(!n)continue;const l=i[r],s=j(n,l);if(s!==l&&a&&a.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:l,sanitizedValue:s}}),u.add(n.name),n&&(h||n.editable)){const c=y(n,s);if(c)return d(w(c,n,s));t[n.name]=s}}for(const r of e.requiredFields)if(!u.has(r.name))return d(`missing required field "${r.name}"`);return null}function j(e,t){let i=t;return typeof t=="string"&&g(e)?i=parseFloat(t):t!=null&&m(e)&&typeof t!="string"&&(i=String(t)),p(i)}let o;function F(e,t){if(!e||!f(t))return e;if("rings"in e||"paths"in e){if(!o)throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function q(){return o||(o=await import("./geometryEngineJSON.1787cb60.js"),o)}async function P(e,t){!f(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await q()}export{S as c,E as d,F as h,d as u,P as y};
