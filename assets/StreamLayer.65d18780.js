var e,t=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,a=(e,r,i)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[r]=i,l=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&a(e,r,t[r]);if(o)for(var r of o(t))n.call(t,r)&&a(e,r,t[r]);return e};import{ab as d,ac as p,ad as y,cu as u,m as c,h9 as h,hR as f,ha as m,hb as g,c$ as v,d0 as b,d1 as w,d2 as S,d7 as I,b8 as R,gw as j,w as x,r as O,cH as F,iR as T,iA as D,iB as P,iS as E,i0 as N,c1 as k,iH as L,hf as U,e$ as _,L as W,iC as A,cx as J,hg as C,cM as G,bY as V,iE as q,cU as z,fQ as Q,iG as H,ir as M,iF as $,hD as B,fJ as Y,iT as K,iU as X,hi as Z,ge as ee,is as te,hh as re,iQ as ie,d6 as oe,iV as se,iW as ne,hj as ae}from"./vendor.d0a39f0f.js";let le=e=class extends u{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new e({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};d([p({type:Number,json:{write:!0}})],le.prototype,"age",void 0),d([p({type:Number,json:{write:!0}})],le.prototype,"ageReceived",void 0),d([p({type:Number,json:{write:!0}})],le.prototype,"displayCount",void 0),d([p({type:Number,json:{write:!0}})],le.prototype,"maxObservations",void 0),le=e=d([y("esri.layers.support.PurgeOptions")],le);var de=le;const pe=c.getLogger("esri.layers.StreamLayer"),ye=ae();let ue=class extends(h(f(m(g(v(b(w(S(I))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new de,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=R.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,t){return"string"==typeof e?l({url:e},t):e}load(e){if(!("WebSocket"in j))return this.addResolvingPromise(Promise.reject(new x("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const t=O(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(F).then((()=>this._fetchService(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}readFeatureReduction(e,t){return T(e,t)}writeWebSceneFeatureReduction(e,t,r,i){D(e,t,"layerDefinition.featureReduction",i)}set renderer(e){P(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){const i=(t=t.layerDefinition||t).drawingInfo&&t.drawingInfo.renderer||void 0;if(i){const e=E(i,t,r)||void 0;return e||pe.error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),e}if(t.defaultSymbol)return t.types&&t.types.length?new N({defaultSymbol:ce(t.defaultSymbol,t,r),field:t.typeIdField,uniqueValueInfos:t.types.map((e=>({id:e.id,symbol:ce(e.symbol,e,r)})))}):new k({symbol:ce(t.defaultSymbol,t,r)})}writeRenderer(e,t,r,i){L(e,t,r,i)}writeWebSceneRenderer(e,t,r,i){L(e,t,"layerDefinition.drawingInfo.renderer",i)}createPopupTemplate(e){return U(this,e)}createQuery(){const e=new _;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,t){if(!this.fields)return null;let r=null;return this.fields.some((t=>(t.name===e&&(r=t.domain),!!r))),r}getField(e){return this.fieldsIndex.get(e)}async _fetchService(e){var t,o;if(this.webSocketUrl){var s;if(null==(s=this.timeInfo)||!s.trackIdField)throw new x("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new x("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new x("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new x("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:t}=await W(this.parsedUrl.path,{query:l({f:"json"},this.parsedUrl.query),responseType:"json",signal:e});this.sourceJSON=t}return this.sourceJSON=(o=l({},null!=(t=this.sourceJSON)?t:{}),r(o,i({objectIdField:"__esri_stream_id__"}))),this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),P(this.renderer,this.fieldsIndex),A(this.timeInfo,this.fieldsIndex),J(this,{origin:"service"})}};d([p({type:String})],ue.prototype,"copyright",void 0),d([p({readOnly:!0})],ue.prototype,"defaultPopupTemplate",null),d([p({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ue.prototype,"definitionExpression",void 0),d([p({type:String})],ue.prototype,"displayField",void 0),d([p({type:C})],ue.prototype,"elevationInfo",void 0),d([G("featureReduction",["layerDefinition.featureReduction"])],ue.prototype,"readFeatureReduction",null),d([V("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:q}})],ue.prototype,"writeWebSceneFeatureReduction",null),d([p(ye.fields)],ue.prototype,"fields",void 0),d([p(ye.fieldsIndex)],ue.prototype,"fieldsIndex",void 0),d([p({type:z})],ue.prototype,"geometryDefinition",void 0),d([p({type:Q.apiValues,json:{read:{reader:Q.read}}})],ue.prototype,"geometryType",void 0),d([p(H)],ue.prototype,"labelsVisible",void 0),d([p({type:[M],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:$},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],ue.prototype,"labelingInfo",void 0),d([p(B)],ue.prototype,"legendEnabled",void 0),d([p({type:["show","hide"]})],ue.prototype,"listMode",void 0),d([p({type:Y})],ue.prototype,"maxReconnectionAttempts",void 0),d([p({type:Y})],ue.prototype,"maxReconnectionInterval",void 0),d([p(K)],ue.prototype,"maxScale",void 0),d([p(X)],ue.prototype,"minScale",void 0),d([p({type:String})],ue.prototype,"objectIdField",void 0),d([p({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],ue.prototype,"operationalLayerType",void 0),d([p(Z)],ue.prototype,"popupEnabled",void 0),d([p({type:ee,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ue.prototype,"popupTemplate",void 0),d([p({type:de})],ue.prototype,"purgeOptions",void 0),d([p({types:te,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],ue.prototype,"renderer",null),d([G("service","renderer",["drawingInfo.renderer","defaultSymbol"]),G("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],ue.prototype,"readRenderer",null),d([V("renderer")],ue.prototype,"writeRenderer",null),d([V("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:re}})],ue.prototype,"writeWebSceneRenderer",null),d([p(ie)],ue.prototype,"screenSizePerspectiveEnabled",void 0),d([p({type:R,json:{origins:{service:{read:{source:"spatialReference"}}}}})],ue.prototype,"spatialReference",void 0),d([p({json:{read:!1}})],ue.prototype,"type",void 0),d([p(oe)],ue.prototype,"url",void 0),d([p({type:Number})],ue.prototype,"updateInterval",void 0),d([p({type:String})],ue.prototype,"webSocketUrl",void 0),ue=d([y("esri.layers.StreamLayer")],ue);const ce=se({types:ne});var he=ue;export{he as default};
