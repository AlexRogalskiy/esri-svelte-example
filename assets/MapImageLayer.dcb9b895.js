var $=Object.defineProperty,j=Object.defineProperties;var I=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var x=(e,t,r)=>t in e?$(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))M.call(t,r)&&x(e,r,t[r]);if(v)for(var r of v(t))E.call(t,r)&&x(e,r,t[r]);return e},h=(e,t)=>j(e,I(t));import{i9 as P,iO as N,ia as q,cW as J,cX as L,cY as U,cZ as F,ib as T,iq as k,iM as R,a6 as A,d2 as V,r as z,b1 as H,jk as S,jv as K,w,C as f,E as W,cP as C,ft as D,is as G,a9 as a,aa as n,cH as B,bO as _,fN as X,d1 as Y,ab as Z}from"./vendor.f5642644.js";import{f as Q,y as ee,K as te}from"./SublayersOwner.ad3b08fa.js";import{c as re}from"./ExportImageParameters.da713bb2.js";import{e as O}from"./sublayerUtils.5227ee88.js";import"./Version.17817c11.js";let s=class extends P(N(q(Q(ee(J(L(U(F(T(k(R(A(V))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return typeof e=="string"?p({url:e},t):e}load(e){const t=z(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(H).then(()=>this._fetchService(t))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const y=e.slice().reverse().flatten(({sublayers:o})=>o&&o.toArray().reverse()).toArray();let l=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const o=S(i.origin);if(o===3){const u=this.createSublayersForOrigin("service").sublayers;l=O(y,u,2)}else if(o>3){const u=this.createSublayersForOrigin("portal-item");l=O(y,u.sublayers,S(u.origin))}}const c=[],d=p({writeSublayerStructure:l},i);let m=l;y.forEach(o=>{const u=o.write({},d);c.push(u),m=m||o.originOf("visible")==="user"}),c.some(o=>Object.keys(o).length>1)&&(t.layers=c),m&&(t.visibleLayers=y.filter(o=>o.visible).map(o=>o.id))}createExportImageParameters(e,t,r,i){const y=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const l=new re({layer:this,floors:i==null?void 0:i.floors,scale:K({extent:e,width:t})*y}),c=l.toJSON();l.destroy();const d=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},m=e&&e.spatialReference,o=m.wkid||JSON.stringify(m.toJSON());c.dpi*=y;const u={};if(i!=null&&i.timeExtent){const{start:g,end:b}=i.timeExtent.toJSON();u.time=g&&b&&g===b?""+g:`${g==null?"null":g},${b==null?"null":b}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return p(p(p({bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+r},c),d),u)}async fetchImage(e,t,r,i){var y;const l={responseType:"image",signal:(y=i==null?void 0:i.signal)!=null?y:null,query:h(p(p(h(p(p({},this.parsedUrl.query),this.createExportImageParameters(e,t,r,i)),{f:"image"}),this.refreshParameters),this.customParameters),{token:this.apiKey})},c=this.parsedUrl.path+"/export";return l.query.dynamicLayers!=null&&!this.capabilities.exportMap.supportsDynamicLayers?Promise.reject(new w("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query})):f(c,l).then(d=>d.data).catch(d=>{throw W(d)?d:new w("mapimagelayer:image-fetch-error",`Unable to load image: ${c}`,{error:d})})}async fetchRecomputedExtents(e={}){const t=h(p({},e),{query:h(p({returnUpdates:!0,f:"json"},this.customParameters),{token:this.apiKey})}),{data:r}=await f(this.url,t),{extent:i,fullExtent:y,timeExtent:l}=r,c=i||y;return{fullExtent:c&&C.fromJSON(c),timeExtent:l&&D.fromJSON({start:l[0],end:l[1]})}}loadAll(){return G(this,e=>{e(this.allSublayers)})}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await f(this.parsedUrl.path,{query:h(p(p({f:"json"},this.parsedUrl.query),this.customParameters),{token:this.apiKey}),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};a([n({type:Boolean})],s.prototype,"datesInUnknownTimezone",void 0),a([n()],s.prototype,"dpi",void 0),a([n()],s.prototype,"gdbVersion",void 0),a([n()],s.prototype,"imageFormat",void 0),a([B("imageFormat",["supportedImageFormatTypes"])],s.prototype,"readImageFormat",null),a([n({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],s.prototype,"imageMaxHeight",void 0),a([n({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],s.prototype,"imageMaxWidth",void 0),a([n()],s.prototype,"imageTransparency",void 0),a([n({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),a([n({json:{read:!1,write:!1}})],s.prototype,"labelsVisible",void 0),a([n({type:["ArcGISMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([n({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),a([n()],s.prototype,"sourceJSON",void 0),a([n({json:{write:{ignoreOrigin:!0}}})],s.prototype,"sublayers",void 0),a([_("sublayers",{layers:{type:[te]},visibleLayers:{type:[X]}})],s.prototype,"writeSublayers",null),a([n({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),a([n({json:{read:!1},readOnly:!0,value:"map-image"})],s.prototype,"type",void 0),a([n(Y)],s.prototype,"url",void 0),s=a([Z("esri.layers.MapImageLayer")],s);const pe=s;export{pe as default};
