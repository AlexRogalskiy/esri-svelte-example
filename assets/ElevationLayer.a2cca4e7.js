var S=Object.defineProperty,$=Object.defineProperties;var T=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var L=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var g=(r,e,t)=>e in r?S(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,c=(r,e)=>{for(var t in e||(e={}))L.call(e,t)&&g(r,t,e[t]);if(v)for(var t of v(e))x.call(e,t)&&g(r,t,e[t]);return r},y=(r,e)=>$(r,T(e));import{m as _,cT as j,cU as k,cV as I,r as p,H as m,bD as C,cW as D,cX as E,cY as V,cZ as M,c_ as A,w as O,b1 as P,C as f,c$ as U,a9 as a,aa as o,d0 as H,d1 as N,cH as q,ab as J,d2 as z}from"./vendor.f5642644.js";import{s as F}from"./ArcGISCachedService.3b9f2349.js";import"./TilemapCache.67f374a9.js";const Q=_.getLogger("esri.core.workers.WorkerHandle");class G{constructor(e,t,s,n={}){this._mainMethod=t,this._listeners=[],this._promise=j(e,y(c({},n),{schedule:s})).then(h=>{if(this._thread===void 0){this._thread=h,this._promise=null,n.hasInitialize&&this.broadcast({},"initialize");for(const u of this._listeners)this._connectListener(u)}else h.close()}),this._promise.catch(h=>Q.error(`Failed to initialize ${e} worker: ${h}`))}on(e,t){const s={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(s),this._connectListener(s),k(()=>{s.removed=!0,I(this._listeners,s),this._thread&&p(s.threadHandle)&&s.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,s){if(this._thread){const n=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:n,signal:s})}return this._promise?this._promise.then(()=>(m(s),this.invokeMethod(e,t,s))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class w extends G{constructor(e=null){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,s){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},s):Promise.resolve(null)}getTransferList(e){return[e.buffer]}release(){--this.ref<=0&&(d.forEach((e,t)=>{e===this&&d.delete(t)}),this.destroy())}}const d=new Map;function W(r=null){let e=d.get(C(r));return e||(p(r)?(e=new w(t=>r.schedule(t)),d.set(r,e)):(e=new w,d.set(null,e))),++e.ref,e}const b=_.getLogger("esri.layers.ElevationLayer");let i=class extends F(D(E(V(M(z))))){constructor(...r){super(...r),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=W()}normalizeCtorArgs(r,e){return typeof r=="string"?c({url:r},e):r}destroy(){this._lercDecoder=A(this._lercDecoder)}set minScale(r){this.constructed&&b.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(r){this.constructed&&b.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(r,e){let t=e.currentVersion;return t||(t=9.3),t}load(r){const e=p(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let s=0;s<t.typeKeywords.length;s++)if(t.typeKeywords[s].toLowerCase()==="elevation 3d layer")return!0;throw new O("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(P).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(r,e,t,s){const n=p((s=s||{signal:null}).signal)?s.signal:s.signal=new AbortController().signal,h={responseType:"array-buffer",signal:n},u={noDataValue:s.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(r,e,t,s)).then(()=>f(this.getTileUrl(r,e,t),h)).then(l=>this._lercDecoder.decode(l.data,u,n)).then(l=>({values:l.pixelData,width:l.width,height:l.height,maxZError:l.fileInfo.maxZError,noDataValue:l.noDataValue,minValue:l.minValue,maxValue:l.maxValue}))}getTileUrl(r,e,t){const s=!this.tilemapCache&&this.supportsBlankTile,n=U(y(c({},this.parsedUrl.query),{blankTile:!s&&null}));return`${this.parsedUrl.path}/tile/${r}/${e}/${t}${n?"?"+n:""}`}async queryElevation(r,e){const{ElevationQuery:t}=await import("./ElevationQuery.263848ed.js");return m(e),new t().query(this,r,e)}async createElevationSampler(r,e){const{ElevationQuery:t}=await import("./ElevationQuery.263848ed.js");return m(e),new t().createSampler(this,r,e)}_fetchTileAvailability(r,e,t,s){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,e,t,s):Promise.resolve("unknown")}async _fetchImageService(r){if(this.sourceJSON)return this.sourceJSON;const e={query:c({f:"json"},this.parsedUrl.query),responseType:"json",signal:r},t=await f(this.parsedUrl.path,e);t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};a([o({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),a([o({readOnly:!0,type:H})],i.prototype,"heightModelInfo",void 0),a([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),a([o({type:["show","hide"]})],i.prototype,"listMode",void 0),a([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],i.prototype,"minScale",null),a([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],i.prototype,"maxScale",null),a([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],i.prototype,"opacity",void 0),a([o({type:["ArcGISTiledElevationServiceLayer"]})],i.prototype,"operationalLayerType",void 0),a([o()],i.prototype,"sourceJSON",void 0),a([o({json:{read:!1},value:"elevation",readOnly:!0})],i.prototype,"type",void 0),a([o(N)],i.prototype,"url",void 0),a([o()],i.prototype,"version",void 0),a([q("version",["currentVersion"])],i.prototype,"readVersion",null),i=a([J("esri.layers.ElevationLayer")],i),i.prototype.fetchTile.__isDefault__=!0;const X=i;export{X as default};
