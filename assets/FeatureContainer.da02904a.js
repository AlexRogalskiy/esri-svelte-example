import{Y as t,cn as e,ck as s,D as i,Z as r,$ as a,bS as n,N as o,r as h,q as d,m as u,cb as l,bF as _,v as c,bI as p,w as f,bo as E,cc as x,co as R,bN as v,b5 as g,M as m,cp as b,a7 as y,bC as T,cq as S}from"./vendor.d0a39f0f.js";import{o as k,Z as C,K as z,A as w,B as D,C as M,D as F,r as O}from"./definitions.e5e12ce7.js";import{r as V,o as P}from"./TileContainer.850b0054.js";import{c as A}from"./VertexArrayObject.3a9852d6.js";import{o as L}from"./Texture.6f578e52.js";import{H as I,G as N,N as U,K as B}from"./Utils.ea926aef.js";import{n as q,l as K}from"./visualVariablesUtils.684ffd7c.js";class j extends V{constructor(t,e,s){super(t,e,s,k,k)}destroy(){super.destroy(),this._transforms&&j.TransformCache.release(this.key.hash)}setTransform(t,h){if(t.version===this.transforms.version)return;this.transforms.version=t.version;const d=h/(t.resolution*t.pixelRatio),u=this.transforms.tileMat3,[l,_]=t.toScreenNoRotation([0,0],[this.x,this.y]),c=this.width/this.rangeX*d,p=this.height/this.rangeY*d;e(u,c,0,0,0,p,0,l,_,1),s(this.transforms.dvs,t.displayViewMat3,u);const f=this.transforms.labelMat2d,E=t.getScreenTransform(f,h),x=o();i(x,[this.x,this.y],E),r(f),a(f,f,x),n(f,t.viewMat2d,f)}_createTransforms(){return j.TransformCache.acquire(this.key.hash)}}j.TransformCache=new class{constructor(){this._cache=new Map}acquire(e){const s=this._cache;if(s.has(e)){const t=s.get(e);return t.refCount++,t}const i={refCount:1,version:-1,labelMat2d:t(),tileMat3:t(),dvs:t()};return s.set(e,i),i}release(t){--this._cache.get(t).refCount||this._cache.delete(t)}};const Y=2147483647;class Q{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/$.BYTES_PER_RECORD-e){const i=new $(new Int32Array(t,e*$.BYTES_PER_RECORD,s*$.ELEMENTS_PER_RECORD));return new Q(i)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const t=this._cursor.size();if(e<t)return this._cursor._index=e,!0;e-=t,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){var t;const e=new Q(null==(t=this._head)?void 0:t.copy());if(!e._head)return e;let s=e._head,i=e._head._link;for(;i;)s._link=i.copy(),s=i,i=s._link;return e}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){var t;return null!=(t=this._cursor.peekId())?t:this._cursor._link.peekId()}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&(h(s)&&(s._link=e._link),e===this._head&&(this._head=e._link),e===this._cursor&&(this._cursor=e._link)),!0;s=e,e=e._link}return!1}}Q.ELEMENTS_PER_RECORD=C,Q.BYTES_PER_RECORD=Q.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class ${constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new $(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,s=this.lookup(t);if(s)for(this.id=Y,++this._deletedCount;this.next()&&this.id===t;)this.id=Y,++this._deletedCount;return this._index=e,s}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(d(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const e=this._index;return this._index=this._offsets.instance.get(t),this.id!==Y||(this._index=e,!1)}get id(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*$.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*$.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*$.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*$.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/$.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===Y;);return this._index<this.size()}peekId(){const t=(this._index+1)*$.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new $(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}$.ELEMENTS_PER_RECORD=C,$.BYTES_PER_RECORD=$.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;const Z=u.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),H=q(K,Z),X=t=>2147483647&t;class G{constructor(t,e,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:a}=t,n=I(r);this.shared=s,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(p(i))),this._resetRange()}destroy(){_(this._texture,(t=>t.dispose()));for(const t in this._fbos)_(this._fbos[t],(e=>{"0"===t&&e.detachColorTexture(),e.dispose()})),this._fbos[t]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(t,e,s){const i=X(t),r=p(this.data),a=i*this.texelSize+e;!r||a>=r.length||(r[a]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(t,e){if(d(this.data))return null;const s=X(t)*this.texelSize+e;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(t){return v(this._texture,(()=>this._initTexture(t)))}getFBO(t,e=0){if(d(this._fbos[e])){const s={colorTarget:0,depthStencilTarget:0},i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new A(t,s,i)}return this._fbos[e]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!c("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,e){if(!this.locked){try{const e=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const i=p(this.data).buffer,r=this.getTexture(t),a=4,n=(e-e%this.size)/this.size,o=(s-s%this.size)/this.size,h=n,d=this.size,u=o,l=n*this.size*a,_=(d+u*this.size)*a-l,c=I(this.pixelType),E=new c(i,l*c.BYTES_PER_ELEMENT,_),x=this.size,R=u-h+1;if(R>this.size)return void Z.error(new f("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,h,x,R,E)}catch(s){}e()}}update(t){const{data:e,start:s,end:i}=t;if(h(e)){const i=this.data,r=s*this.texelSize;for(let s=0;s<e.length;s++){const a=1<<s%this.texelSize;t.layout&a&&(i[r+s]=e[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(t,e){const s=this.size;if(this.size=e,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=I(this.pixelType);this.destroy(),this.data=new i(p(t.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new L(t,this._textureDesc,v(this.data,void 0));if(h(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),o=N(r),h=new(I(r))(new ArrayBuffer(s*i*o*this.texelSize)),d=t.getBoundFramebufferObject(),{x:u,y:l,width:_,height:c}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,s,i,a,r,h),e.updateData(0,0,0,2*s,i/2,h),t.setViewport(u,l,_,c),t.bindFramebuffer(d)}return this.destroy(),this._texture=e,this._texture}}class J{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:s,size:i}=t;if(this.shared=s,this.size=i,H("Initializing AttributeStoreView",t),d(this._data))this._data=l(e,(t=>new G(t,i,s)));else for(let r=0;r<this._data.length;r++){const t=this._data[r],a=e[r];h(a)&&(d(t)?this._data[r]=new G(a,i,s):t.resize(a,i))}this._initialized=!0}destroy(){_(this._data,(t=>l(t,(t=>t.destroy())))),_(this._defaultTexture,(t=>t.dispose()))}isUpdating(){const t=this._data;if(d(t))return!0;const e=h(this._pendingAttributeUpdate),s=e;return c("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${s}\n  -> hasPendingUpdate ${e}`),s}getBlock(t){return d(this._data)?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,z,0,0)}getData(t,e,s,i){if(!this._data)return 0;const r=p(this._data)[e];if(d(r))return 0;const a=r.getData(t,s);return h(a)?a:i}setData(t,e,s,i){const r=p(this._data)[e];p(r).setData(t,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(t){if(this._pendingAttributeUpdate)return void Z.error(new f("mapview-webgl","Tried to update attribute data with a pending update"));const e=E();return H("AttributeStoreView Update Requested",t),this._pendingAttributeUpdate={data:t,resolver:e},e.promise}update(){if(this._initialized&&h(this._pendingAttributeUpdate)){const{data:t,resolver:e}=this._pendingAttributeUpdate,s=p(this._data);for(let i=0;i<t.blocks.length;i++){const e=t.blocks[i],r=s[i];_(r,(t=>_(e,(e=>{H(`Updating block ${i}`,e),t.update(e)}))))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){this.update();const s=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(s,w),void(e&&(t.bindTexture(s,D),t.bindTexture(s,M),t.bindTexture(s,F)));const i=p(this._data);this._locked&&!this._forceNextUpload||(x(i,(e=>e.updateTexture(t,(()=>this._onUpdate())))),this._forceNextUpload=!1),t.bindTexture(R(i[0],s,(e=>e.getTexture(t))),w),e&&(t.bindTexture(R(i[1],s,(e=>e.getTexture(t))),D),t.bindTexture(R(i[2],s,(e=>e.getTexture(t))),M),t.bindTexture(R(i[3],s,(e=>e.getTexture(t))),F))}_getDefaultTexture(t){if(d(this._defaultTexture)){const e={wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1};this._defaultTexture=new L(t,e,new Uint8Array(4))}return this._defaultTexture}}function W(t,e){const s=e.length;if(t<e[0].value||1===s)return e[0].size;for(let i=1;i<s;i++)if(t<e[i].value){const s=(t-e[i-1].value)/(e[i].value-e[i-1].value);return e[i-1].size+s*(e[i].size-e[i-1].size)}return e[s-1].size}function tt(t,e,s=0){if(d(e))return t[s+0]=0,t[s+1]=0,t[s+2]=0,void(t[s+3]=0);const{r:i,g:r,b:a,a:n}=e;t[s+0]=i*n/255,t[s+1]=r*n/255,t[s+2]=a*n/255,t[s+3]=n}class et{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(t){const e=this._vvSizeFieldStops;switch(e.type){case"static":return e;case"level-dependent":return v(e.levels[t],(()=>{let s=1/0,i=0;for(const o in e.levels){const e=parseFloat(o),r=Math.abs(t-e);r<s&&(s=r,i=e)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((t-i)/2),a=p(e.levels[i]),n=new Float32Array(a.values);return n[2]*=r,n[3]*=r,{sizes:p(a.sizes),values:n}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(t){h(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,t)}setInfo(t,e,s){h(s)&&s.forEach((t=>this._updateEffects(t))),this._vvInfo=e,"dot-density"===t.type&&this._updateDotDensityInfo(t)}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:g().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(t){h(t)&&t.filter&&t.filter.enabled&&(this.outsideLabelsVisible=t.excludedLabelsVisible)}_updateVisualVariables(t,e){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!t)return;const i=t.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const t=i.minMaxValue;let s,r;if(U(t.minSize)&&U(t.maxSize))if(B(t.minSize)&&B(t.maxSize))s=m(t.minSize),r=m(t.maxSize);else{const i=e.scale;s=m(W(i,t.minSize.stops)),r=m(W(i,t.maxSize.stops))}this.vvSizeMinMaxValue.set([t.minDataValue,t.maxDataValue,s,r])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=m(W(e.scale,i.scaleStops.stops))),i.unitValue){const t=b(e.spatialReference)/y[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=t/e.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=t.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const a=t.opacity;a&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(a.values),this.vvOpacities.set(a.opacities));const n=t.rotation;n&&(s.vvRotationEnabled=!0,s.vvRotationType=n.type)}_updateDotDensityInfo(t){const e=t.attributes;this.ddDotValue=t.dotValue,this.ddDotScale=t.referenceScale,this.ddDotSize=t.dotSize,this.ddDotBlending=t.dotBlendingEnabled,this.ddSeed=t.seed;for(let s=0;s<O;s++){const t=s>=e.length?new T([0,0,0,0]):e[s].color;tt(this.ddColors,t,4*s)}for(let s=0;s<8;s++)this.ddActiveDots[s]=s<t.attributes.length?1:0;tt(this.ddBackgroundColor,t.backgroundColor)}}class st extends P{constructor(t){super(t),this._rendererInfo=new et,this._materialItemsRequestQueue=new S,this.attributeView=new J((()=>this.onAttributeStoreUpdate()))}destroy(){this.removeAllChildren(),this.children.forEach((t=>t.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(t,e,s){this._rendererInfo.setInfo(t,e,s),this.requestRender()}async getMaterialItems(t,e){if(!t||0===t.length)return null;const s=E();return this._materialItemsRequestQueue.push({items:t,abortOptions:e,resolver:s}),this.requestRender(),s.promise}doRender(t){if(t.context.capabilities.enable("textureFloat"),t.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let e=this._materialItemsRequestQueue.pop();for(;e;)this._processMaterialItemRequest(t,e),e=this._materialItemsRequestQueue.pop()}super.doRender(t)}renderChildren(t){for(const e of this.children)e.commit(t);this._rendererInfo.update(t.state),super.renderChildren(t)}createRenderParams(t){const e=super.createRenderParams(t);return e.rendererInfo=this._rendererInfo,e.attributeView=this.attributeView,e}onAttributeStoreUpdate(){}_processMaterialItemRequest(t,{items:e,abortOptions:s,resolver:i}){const{painter:r,pixelRatio:a}=t,n=e.map((t=>r.textureManager.rasterizeItem(t.symbol,a,t.glyphIds,s)));Promise.all(n).then((t=>{if(!this.stage)return void i.reject();const s=t.map(((t,s)=>({id:e[s].id,mosaicItem:t})));i.resolve(s)}),i.reject)}}export{j as f,Q as i,st as o};
